// <auto-generated />
using System;
using DotNetExam.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetExam.Business.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250220214845_InitialDataSeed")]
    partial class InitialDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetExam.Data.Models.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Articulos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "ART001",
                            Descripcion = "Laptop",
                            Imagen = "https://http2.mlstatic.com/D_NQ_NP_869818-MLU77724314601_072024-O.webp",
                            Precio = 1500.00m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "ART002",
                            Descripcion = "Smartphone",
                            Imagen = "https://http2.mlstatic.com/D_NQ_NP_877416-CBT77139740446_062024-O.webp",
                            Precio = 800.00m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "ART003",
                            Descripcion = "Tablet",
                            Imagen = "https://http2.mlstatic.com/D_NQ_NP_709058-MLU78169795366_082024-O.webp",
                            Precio = 400.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "ART004",
                            Descripcion = "Monitor",
                            Imagen = "https://http2.mlstatic.com/D_NQ_NP_886158-MLA46737528644_072021-O.webp",
                            Precio = 250.00m,
                            Stock = 25
                        });
                });

            modelBuilder.Entity("DotNetExam.Data.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DotNetExam.Data.Models.ClienteArticulo", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("ClienteId", "ArticuloId");

                    b.HasIndex("ArticuloId");

                    b.ToTable("ClienteArticulos");
                });

            modelBuilder.Entity("DotNetExam.Data.Models.Tienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tiendas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "Calle 123",
                            Sucursal = "Tienda A"
                        },
                        new
                        {
                            Id = 2,
                            Direccion = "Avenida 456",
                            Sucursal = "Tienda B"
                        });
                });

            modelBuilder.Entity("DotNetExam.Data.Models.TiendaArticulo", b =>
                {
                    b.Property<int>("TiendaId")
                        .HasColumnType("int");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("TiendaId", "ArticuloId");

                    b.HasIndex("ArticuloId");

                    b.ToTable("TiendaArticulos");

                    b.HasData(
                        new
                        {
                            TiendaId = 1,
                            ArticuloId = 1,
                            Fecha = new DateTime(2025, 2, 20, 15, 48, 44, 729, DateTimeKind.Local).AddTicks(3278)
                        },
                        new
                        {
                            TiendaId = 1,
                            ArticuloId = 2,
                            Fecha = new DateTime(2025, 2, 20, 15, 48, 44, 729, DateTimeKind.Local).AddTicks(3288)
                        },
                        new
                        {
                            TiendaId = 2,
                            ArticuloId = 3,
                            Fecha = new DateTime(2025, 2, 20, 15, 48, 44, 729, DateTimeKind.Local).AddTicks(3290)
                        },
                        new
                        {
                            TiendaId = 2,
                            ArticuloId = 4,
                            Fecha = new DateTime(2025, 2, 20, 15, 48, 44, 729, DateTimeKind.Local).AddTicks(3291)
                        });
                });

            modelBuilder.Entity("DotNetExam.Entities.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DotNetExam.Data.Models.ClienteArticulo", b =>
                {
                    b.HasOne("DotNetExam.Data.Models.Articulo", "Articulo")
                        .WithMany("Compradores")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetExam.Data.Models.Cliente", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DotNetExam.Data.Models.TiendaArticulo", b =>
                {
                    b.HasOne("DotNetExam.Data.Models.Articulo", "Articulo")
                        .WithMany("Tiendas")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetExam.Data.Models.Tienda", "Tienda")
                        .WithMany("ArticulosEnTienda")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("DotNetExam.Data.Models.Articulo", b =>
                {
                    b.Navigation("Compradores");

                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("DotNetExam.Data.Models.Cliente", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("DotNetExam.Data.Models.Tienda", b =>
                {
                    b.Navigation("ArticulosEnTienda");
                });
#pragma warning restore 612, 618
        }
    }
}
